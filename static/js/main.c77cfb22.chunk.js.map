{"version":3,"sources":["App.js","serviceWorker.js","store/reducers/cart.js","store/reducers/payment.js","store/store.js","lib/jss.js","index.js","store/actions/cart.js","containers/PageLoading/PageLoading.jsx","components/UI/Spinner/Spinner.jsx","store/actions/payment.js","components/UI/Spinner/Spinner.module.css"],"names":["AsyncCheckoutPage","Loadable","loader","Promise","all","__webpack_require__","e","then","bind","loading","PageLoading","App","react_default","a","createElement","react_router","path","component","to","Component","Boolean","window","location","hostname","match","defaultState","loaded","cartItems","totalizers","subTotal","shippingTotal","discount","total","creditCardNumber","creditCardHolder","creditCardExpDate","createStore","combineReducers","cart","state","arguments","length","undefined","action","type","ActionTypeEnum","ADD_PRODUCTS","Object","objectSpread","concat","toConsumableArray","data","UPDATE_TOTALIZERS","START_LOADING","FINISH_LOADING","payment","ADD_PAYMENT","number","split","map","part","index","join","jss","create","preset","app","es","store","react_router_dom","react_jss_lib","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","addProducts","products","updateTotalizers","startLoading","finishLoading","d","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_jss__WEBPACK_IMPORTED_MODULE_1__","react_jss__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_3__","withStyles","wrapper","display","justifyContent","flexFlow","textAlign","padding","title","fontSize","lineHeight","margin","bottom","details","color","fontWeight","link","textDecoration","spinner","_ref","classes","isLoading","error","element","className","Fragment","_Spinner_module_css__WEBPACK_IMPORTED_MODULE_1__","_Spinner_module_css__WEBPACK_IMPORTED_MODULE_1___default","Spinner","styles","addPayment","module","exports","appear","loaderBounceDelay"],"mappings":"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","file":"static/js/main.c77cfb22.chunk.js","sourcesContent":["/* React */\nimport React, { Component } from 'react';\n\n/* Libs */\nimport Loadable from 'react-loadable'\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\n/* Custom components */\nimport PageLoading from './containers/PageLoading/PageLoading';\n\n/* Routes */\nconst AsyncCheckoutPage = Loadable({\n  loader: () => import('./containers/CheckoutPage/CheckoutPage'),\n  loading: PageLoading,\n})\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Switch>\n          <Route path=\"/checkout/\" component={AsyncCheckoutPage} />\n          <Redirect path=\"/\" to=\"/checkout\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { ActionTypeEnum } from \"../actions/cart\";\n\nconst defaultState = {\n  loading: true,\n  loaded: false,\n  cartItems: [],\n  totalizers: {\n    subTotal: 0,\n    shippingTotal: 0,\n    discount: 0,\n    total: 0,\n  }\n}\n\n/**\n * Inserts the action inside the state\n * @param {any} state\n * @param {{type: string, data: any}} action\n */\nexport function cart(state = defaultState, action) {\n  switch (action.type) {\n    case ActionTypeEnum.ADD_PRODUCTS:\n      return {\n        ...state,\n        cartItems: [\n          ...state.cartItems,\n          ...action.data,\n        ],\n      }\n    case ActionTypeEnum.UPDATE_TOTALIZERS:\n      return {\n        ...state,\n        totalizers: {\n          ...state.totalizers,\n          ...action.data,\n        },\n      }\n    case ActionTypeEnum.START_LOADING:\n      return {\n        ...state,\n        loading: true,\n      }\n    case ActionTypeEnum.FINISH_LOADING:\n      return {\n        ...state,\n        loaded: true,\n        loading: false,\n      }\n    default:\n      return state\n  }\n}\n\n","import { ActionTypeEnum } from \"../actions/payment\";\n\nconst defaultState = {\n  creditCardNumber: '',\n  creditCardHolder: '',\n  creditCardExpDate: '',\n}\n\n/**\n * Inserts the action inside the state\n * @param {any} state\n * @param {{type: string, data: any}} action\n */\nexport function payment(state = defaultState, action) {\n  switch (action.type) {\n    case ActionTypeEnum.ADD_PAYMENT:\n      // Hides credit card number\n      const number = action.data.creditCardNumber.split('.')\n        .map((part, index) => index === 3 ? part : '****')\n        .join('.')\n\n      return {\n        ...state,\n        creditCardNumber: number,\n        creditCardHolder: action.data.creditCardHolder,\n        creditCardExpDate: action.data.creditCardExpDate,\n      }\n    default:\n      return state\n  }\n}\n\n","import { createStore, combineReducers } from 'redux'\nimport { cart } from './reducers/cart'\nimport { payment } from './reducers/payment'\n\nexport default createStore(\n  combineReducers({\n    cart,\n    payment,\n  }),\n)\n","import { create } from 'jss'\nimport preset from 'jss-preset-default'\n\nconst jss = create(preset())\n\nexport default jss\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n/* Libs */\nimport { BrowserRouter } from 'react-router-dom'\n\n/* Redux */\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\n/* JSS */\nimport { JssProvider } from 'react-jss'\nimport jss from './lib/jss';\n\nconst app =\n  <Provider store={store}>\n    <BrowserRouter>\n      <JssProvider jss={jss}>\n        <App />\n      </JssProvider>\n    </BrowserRouter>\n  </Provider>\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export function addProducts(products) {\n  return {\n    type: ActionTypeEnum.ADD_PRODUCTS,\n    data: products,\n  }\n}\nexport function updateTotalizers(\n  subTotal,\n  shippingTotal,\n  discount,\n  total,\n) {\n  return {\n    type: ActionTypeEnum.UPDATE_TOTALIZERS,\n    data: {\n      subTotal,\n      shippingTotal,\n      discount,\n      total,\n    },\n  }\n}\n\nexport function startLoading() {\n  return {\n    type: ActionTypeEnum.START_LOADING,\n  }\n}\n\nexport function finishLoading() {\n  return {\n    type: ActionTypeEnum.FINISH_LOADING,\n  }\n}\n\nexport const ActionTypeEnum = {\n  ADD_PRODUCTS: 'ADD_PRODUCTS',\n  UPDATE_TOTALIZERS: 'UPDATE_TOTALIZERS',\n  START_LOADING: 'START_LOADING',\n  FINISH_LOADING: 'FINISH_LOADING',\n}\n","/* React */\nimport React from 'react'\n\n/* Libs */\nimport withStyles from 'react-jss'\n\n/* Components */\nimport { Link } from 'react-router-dom';\n\n/* Custom components */\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nconst PageLoading = ({\n  classes,\n  isLoading,\n  error,\n}) => {\n  const element = isLoading ?\n    <div className={classes.spinner}>\n      <Spinner />\n    </div> :\n    error ?\n      <>\n        <h2 className={classes.title}>Error :(</h2>\n        <h3 className={classes.details}>Sorry, but the page couldn't be loaded. Please try again in a few seconds</h3>\n        <Link to=\"/\" className={classes.link}>Go back to cart</Link>\n      </>\n      : null\n\n  return (\n    <div className={classes.wrapper}>\n      {element}\n    </div>\n  )\n}\n\nconst styles = {\n  wrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexFlow: 'column',\n    textAlign: 'center',\n    padding: [20, 0],\n  },\n  title: {\n    fontSize: 46,\n    lineHeight: 1,\n    margin: { bottom: 20 },\n  },\n  details: {\n    fontSize: 16,\n    color: '#BDBDBD',\n    fontWeight: 'normal',\n    margin: { bottom: 20 },\n  },\n  link: {\n    fontSize: 18,\n    lineHeight: 1,\n    color: '#BDBDBD',\n    textDecoration: 'underline'\n  },\n  spinner: {\n    fontSize: 34,\n  }\n}\n\nexport default withStyles(styles)(PageLoading)\n","import React from 'react'\nimport styles from './Spinner.module.css'\n\nconst Spinner = () =>\n  <div className={styles.loader}>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n\nexport default Spinner\n","export function addPayment(\n  creditCardNumber,\n  creditCardHolder,\n  creditCardExpDate,\n) {\n  return {\n    type: ActionTypeEnum.ADD_PAYMENT,\n    data: {\n      creditCardNumber,\n      creditCardHolder,\n      creditCardExpDate,\n    },\n  }\n}\n\nexport const ActionTypeEnum = {\n  ADD_PAYMENT: 'ADD_PAYMENT',\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__3oewK\",\"appear\":\"Spinner_appear__qbQKj\",\"loaderBounceDelay\":\"Spinner_loaderBounceDelay__1fdxU\"};"],"sourceRoot":""}